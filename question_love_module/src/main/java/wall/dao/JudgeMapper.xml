<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wall.dao.JudgeMapper">
  
  <resultMap id="BaseResultMap" type="wall.pojo.JudgeVo">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="is_judge" jdbcType="BIT" property="isJudge" />
    <result column="complete" jdbcType="INTEGER" property="complete" />
    <result column="unfinished" jdbcType="INTEGER" property="unfinished" />
    <result column="curr_task" jdbcType="INTEGER" property="currTask" />
    <result column="reason" jdbcType="CHAR" property="reason" />
    <result column="vo_time" jdbcType="VARCHAR" property="vo_time" />
  </resultMap>

  <sql id="Base_Column_List">
    user_id, time, is_judge, complete, unfinished, curr_task, reason
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    user_id, FROM_UNIXTIME(time) as vo_time, is_judge, complete, unfinished, curr_task, reason
    from judge
    where user_id = #{userId,jdbcType=INTEGER}
  </select>


  <insert id="insertSelective" parameterType="wall.pojo.JudgeVo">
    insert into judge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="vo_time != null">
        time,
      </if>
      <if test="isJudge != null">
        is_judge,
      </if>
      <if test="complete != null">
        complete,
      </if>
      <if test="unfinished != null">
        unfinished,
      </if>
      <if test="currTask != null">
        curr_task,
      </if>
      <if test="reason != null">
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="vo_time != null">
        UNIX_TIMESTAMP(#{vo_time,jdbcType=INTEGER}),
      </if>
      <if test="isJudge != null">
        #{isJudge,jdbcType=BIT},
      </if>
      <if test="complete != null">
        #{complete,jdbcType=INTEGER},
      </if>
      <if test="unfinished != null">
        #{unfinished,jdbcType=INTEGER},
      </if>
      <if test="currTask != null">
        #{currTask,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=CHAR},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="wall.pojo.JudgeVo">
    update judge
    <set>
      <if test="complete != null">
        complete = #{complete,jdbcType=INTEGER},
      </if>
      <if test="unfinished != null">
        unfinished = #{unfinished,jdbcType=INTEGER},
      </if>
      <if test="currTask != null">
        curr_task = #{currTask,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="agree" parameterType="map">
    update judge set is_judge = 1,reason = #{reason} where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="disagree" parameterType="map">
    update judge set is_judge = 0,reason = #{reason} where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="selectMinUserId" resultType="java.lang.Long">
    select min(user_id) from judge
  </select>

  <select id="selectJudgeVosByRange" parameterType="map" resultMap="BaseResultMap">
    select user_id, FROM_UNIXTIME(time) as vo_time, complete, unfinished, curr_task from judge where user_id > #{userId} and is_judge = 1 limit #{size}
  </select>

</mapper>